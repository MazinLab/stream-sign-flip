-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity stream_sign_flip is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    stream_in_TDATA : IN STD_LOGIC_VECTOR (255 downto 0);
    stream_in_TVALID : IN STD_LOGIC;
    stream_in_TREADY : OUT STD_LOGIC;
    stream_in_TKEEP : IN STD_LOGIC_VECTOR (31 downto 0);
    stream_in_TSTRB : IN STD_LOGIC_VECTOR (31 downto 0);
    stream_in_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    stream_out_TDATA : OUT STD_LOGIC_VECTOR (255 downto 0);
    stream_out_TVALID : OUT STD_LOGIC;
    stream_out_TREADY : IN STD_LOGIC;
    stream_out_TKEEP : OUT STD_LOGIC_VECTOR (31 downto 0);
    stream_out_TSTRB : OUT STD_LOGIC_VECTOR (31 downto 0);
    stream_out_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of stream_sign_flip is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "stream_sign_flip_stream_sign_flip,hls_ip_2023_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu48dr-fsvg1517-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=0.853000,HLS_SYN_LAT=1,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=2,HLS_SYN_LUT=210,HLS_VERSION=2023_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_90 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_B0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv32_D0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011010000";
    constant ap_const_lv32_DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011111";
    constant ap_const_lv32_F0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011110000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";

    signal ap_rst_n_inv : STD_LOGIC;
    signal stream_in_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal stream_out_TDATA_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal regslice_both_stream_out_V_data_V_U_apdone_blk : STD_LOGIC;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_fu_137_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln17_fu_147_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_s_fu_165_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal stream_data_data_1_fu_153_p5 : STD_LOGIC_VECTOR (255 downto 0);
    signal sub_ln17_1_fu_175_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1_fu_193_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal stream_data_data_2_fu_181_p5 : STD_LOGIC_VECTOR (255 downto 0);
    signal sub_ln17_2_fu_203_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_2_fu_221_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal stream_data_data_3_fu_209_p5 : STD_LOGIC_VECTOR (255 downto 0);
    signal sub_ln17_3_fu_231_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_fu_249_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal stream_data_data_4_fu_237_p5 : STD_LOGIC_VECTOR (255 downto 0);
    signal sub_ln17_4_fu_259_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_4_fu_277_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal stream_data_data_5_fu_265_p5 : STD_LOGIC_VECTOR (255 downto 0);
    signal sub_ln17_5_fu_287_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_5_fu_305_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal stream_data_data_6_fu_293_p5 : STD_LOGIC_VECTOR (255 downto 0);
    signal sub_ln17_6_fu_315_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_6_fu_333_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal stream_data_data_7_fu_321_p5 : STD_LOGIC_VECTOR (255 downto 0);
    signal sub_ln17_7_fu_343_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal regslice_both_stream_in_V_data_V_U_apdone_blk : STD_LOGIC;
    signal stream_in_TDATA_int_regslice : STD_LOGIC_VECTOR (255 downto 0);
    signal stream_in_TVALID_int_regslice : STD_LOGIC;
    signal stream_in_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_stream_in_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_stream_in_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal stream_in_TKEEP_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal regslice_both_stream_in_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_stream_in_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_stream_in_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal stream_in_TSTRB_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal regslice_both_stream_in_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_stream_in_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_stream_in_V_last_V_U_apdone_blk : STD_LOGIC;
    signal stream_in_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_stream_in_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_stream_in_V_last_V_U_ack_in : STD_LOGIC;
    signal stream_out_TDATA_int_regslice : STD_LOGIC_VECTOR (255 downto 0);
    signal stream_out_TVALID_int_regslice : STD_LOGIC;
    signal stream_out_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_stream_out_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_stream_out_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_stream_out_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_stream_out_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_stream_out_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_stream_out_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_stream_out_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_stream_out_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_stream_out_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_stream_out_V_last_V_U_vld_out : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component stream_sign_flip_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    regslice_both_stream_in_V_data_V_U : component stream_sign_flip_regslice_both
    generic map (
        DataWidth => 256)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => stream_in_TDATA,
        vld_in => stream_in_TVALID,
        ack_in => regslice_both_stream_in_V_data_V_U_ack_in,
        data_out => stream_in_TDATA_int_regslice,
        vld_out => stream_in_TVALID_int_regslice,
        ack_out => stream_in_TREADY_int_regslice,
        apdone_blk => regslice_both_stream_in_V_data_V_U_apdone_blk);

    regslice_both_stream_in_V_keep_V_U : component stream_sign_flip_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => stream_in_TKEEP,
        vld_in => stream_in_TVALID,
        ack_in => regslice_both_stream_in_V_keep_V_U_ack_in,
        data_out => stream_in_TKEEP_int_regslice,
        vld_out => regslice_both_stream_in_V_keep_V_U_vld_out,
        ack_out => stream_in_TREADY_int_regslice,
        apdone_blk => regslice_both_stream_in_V_keep_V_U_apdone_blk);

    regslice_both_stream_in_V_strb_V_U : component stream_sign_flip_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => stream_in_TSTRB,
        vld_in => stream_in_TVALID,
        ack_in => regslice_both_stream_in_V_strb_V_U_ack_in,
        data_out => stream_in_TSTRB_int_regslice,
        vld_out => regslice_both_stream_in_V_strb_V_U_vld_out,
        ack_out => stream_in_TREADY_int_regslice,
        apdone_blk => regslice_both_stream_in_V_strb_V_U_apdone_blk);

    regslice_both_stream_in_V_last_V_U : component stream_sign_flip_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => stream_in_TLAST,
        vld_in => stream_in_TVALID,
        ack_in => regslice_both_stream_in_V_last_V_U_ack_in,
        data_out => stream_in_TLAST_int_regslice,
        vld_out => regslice_both_stream_in_V_last_V_U_vld_out,
        ack_out => stream_in_TREADY_int_regslice,
        apdone_blk => regslice_both_stream_in_V_last_V_U_apdone_blk);

    regslice_both_stream_out_V_data_V_U : component stream_sign_flip_regslice_both
    generic map (
        DataWidth => 256)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => stream_out_TDATA_int_regslice,
        vld_in => stream_out_TVALID_int_regslice,
        ack_in => stream_out_TREADY_int_regslice,
        data_out => stream_out_TDATA,
        vld_out => regslice_both_stream_out_V_data_V_U_vld_out,
        ack_out => stream_out_TREADY,
        apdone_blk => regslice_both_stream_out_V_data_V_U_apdone_blk);

    regslice_both_stream_out_V_keep_V_U : component stream_sign_flip_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => stream_in_TKEEP_int_regslice,
        vld_in => stream_out_TVALID_int_regslice,
        ack_in => regslice_both_stream_out_V_keep_V_U_ack_in_dummy,
        data_out => stream_out_TKEEP,
        vld_out => regslice_both_stream_out_V_keep_V_U_vld_out,
        ack_out => stream_out_TREADY,
        apdone_blk => regslice_both_stream_out_V_keep_V_U_apdone_blk);

    regslice_both_stream_out_V_strb_V_U : component stream_sign_flip_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => stream_in_TSTRB_int_regslice,
        vld_in => stream_out_TVALID_int_regslice,
        ack_in => regslice_both_stream_out_V_strb_V_U_ack_in_dummy,
        data_out => stream_out_TSTRB,
        vld_out => regslice_both_stream_out_V_strb_V_U_vld_out,
        ack_out => stream_out_TREADY,
        apdone_blk => regslice_both_stream_out_V_strb_V_U_apdone_blk);

    regslice_both_stream_out_V_last_V_U : component stream_sign_flip_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => stream_in_TLAST_int_regslice,
        vld_in => stream_out_TVALID_int_regslice,
        ack_in => regslice_both_stream_out_V_last_V_U_ack_in_dummy,
        data_out => stream_out_TLAST,
        vld_out => regslice_both_stream_out_V_last_V_U_vld_out,
        ack_out => stream_out_TREADY,
        apdone_blk => regslice_both_stream_out_V_last_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, regslice_both_stream_out_V_data_V_U_apdone_blk, stream_in_TVALID_int_regslice, stream_out_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((regslice_both_stream_out_V_data_V_U_apdone_blk = ap_const_logic_1) or (stream_out_TREADY_int_regslice = ap_const_logic_0))) or ((ap_const_logic_1 = ap_const_logic_1) and ((stream_out_TREADY_int_regslice = ap_const_logic_0) or (stream_in_TVALID_int_regslice = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, regslice_both_stream_out_V_data_V_U_apdone_blk, stream_in_TVALID_int_regslice, stream_out_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((regslice_both_stream_out_V_data_V_U_apdone_blk = ap_const_logic_1) or (stream_out_TREADY_int_regslice = ap_const_logic_0))) or ((ap_const_logic_1 = ap_const_logic_1) and ((stream_out_TREADY_int_regslice = ap_const_logic_0) or (stream_in_TVALID_int_regslice = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, regslice_both_stream_out_V_data_V_U_apdone_blk, stream_in_TVALID_int_regslice, stream_out_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((regslice_both_stream_out_V_data_V_U_apdone_blk = ap_const_logic_1) or (stream_out_TREADY_int_regslice = ap_const_logic_0))) or ((ap_const_logic_1 = ap_const_logic_1) and ((stream_out_TREADY_int_regslice = ap_const_logic_0) or (stream_in_TVALID_int_regslice = ap_const_logic_0))));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(stream_in_TVALID_int_regslice, stream_out_TREADY_int_regslice)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((stream_out_TREADY_int_regslice = ap_const_logic_0) or (stream_in_TVALID_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(regslice_both_stream_out_V_data_V_U_apdone_blk, stream_out_TREADY_int_regslice)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((regslice_both_stream_out_V_data_V_U_apdone_blk = ap_const_logic_1) or (stream_out_TREADY_int_regslice = ap_const_logic_0));
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_reset_idle_pp0 <= ap_const_logic_0;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    stream_data_data_1_fu_153_p5 <= (stream_in_TDATA_int_regslice(255 downto 32) & sub_ln17_fu_147_p2 & stream_in_TDATA_int_regslice(15 downto 0));
    stream_data_data_2_fu_181_p5 <= (stream_data_data_1_fu_153_p5(255 downto 64) & sub_ln17_1_fu_175_p2 & stream_data_data_1_fu_153_p5(47 downto 0));
    stream_data_data_3_fu_209_p5 <= (stream_data_data_2_fu_181_p5(255 downto 96) & sub_ln17_2_fu_203_p2 & stream_data_data_2_fu_181_p5(79 downto 0));
    stream_data_data_4_fu_237_p5 <= (stream_data_data_3_fu_209_p5(255 downto 128) & sub_ln17_3_fu_231_p2 & stream_data_data_3_fu_209_p5(111 downto 0));
    stream_data_data_5_fu_265_p5 <= (stream_data_data_4_fu_237_p5(255 downto 160) & sub_ln17_4_fu_259_p2 & stream_data_data_4_fu_237_p5(143 downto 0));
    stream_data_data_6_fu_293_p5 <= (stream_data_data_5_fu_265_p5(255 downto 192) & sub_ln17_5_fu_287_p2 & stream_data_data_5_fu_265_p5(175 downto 0));
    stream_data_data_7_fu_321_p5 <= (stream_data_data_6_fu_293_p5(255 downto 224) & sub_ln17_6_fu_315_p2 & stream_data_data_6_fu_293_p5(207 downto 0));

    stream_in_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, stream_in_TVALID_int_regslice)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stream_in_TDATA_blk_n <= stream_in_TVALID_int_regslice;
        else 
            stream_in_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    stream_in_TREADY <= regslice_both_stream_in_V_data_V_U_ack_in;

    stream_in_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stream_in_TREADY_int_regslice <= ap_const_logic_1;
        else 
            stream_in_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    stream_out_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, stream_out_TREADY_int_regslice)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            stream_out_TDATA_blk_n <= stream_out_TREADY_int_regslice;
        else 
            stream_out_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    stream_out_TDATA_int_regslice <= (sub_ln17_7_fu_343_p2 & stream_data_data_7_fu_321_p5(239 downto 0));
    stream_out_TVALID <= regslice_both_stream_out_V_data_V_U_vld_out;

    stream_out_TVALID_int_regslice_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stream_out_TVALID_int_regslice <= ap_const_logic_1;
        else 
            stream_out_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln17_1_fu_175_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(tmp_s_fu_165_p4));
    sub_ln17_2_fu_203_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(tmp_1_fu_193_p4));
    sub_ln17_3_fu_231_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(tmp_2_fu_221_p4));
    sub_ln17_4_fu_259_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(tmp_3_fu_249_p4));
    sub_ln17_5_fu_287_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(tmp_4_fu_277_p4));
    sub_ln17_6_fu_315_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(tmp_5_fu_305_p4));
    sub_ln17_7_fu_343_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(tmp_6_fu_333_p4));
    sub_ln17_fu_147_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(tmp_fu_137_p4));
    tmp_1_fu_193_p4 <= stream_in_TDATA_int_regslice(95 downto 80);
    tmp_2_fu_221_p4 <= stream_in_TDATA_int_regslice(127 downto 112);
    tmp_3_fu_249_p4 <= stream_in_TDATA_int_regslice(159 downto 144);
    tmp_4_fu_277_p4 <= stream_in_TDATA_int_regslice(191 downto 176);
    tmp_5_fu_305_p4 <= stream_in_TDATA_int_regslice(223 downto 208);
    tmp_6_fu_333_p4 <= stream_in_TDATA_int_regslice(255 downto 240);
    tmp_fu_137_p4 <= stream_in_TDATA_int_regslice(31 downto 16);
    tmp_s_fu_165_p4 <= stream_in_TDATA_int_regslice(63 downto 48);
end behav;
