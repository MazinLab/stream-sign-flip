// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="stream_sign_flip_stream_sign_flip,hls_ip_2023_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu48dr-fsvg1517-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=0.853000,HLS_SYN_LAT=1,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=2,HLS_SYN_LUT=210,HLS_VERSION=2023_1}" *)

module stream_sign_flip (
        ap_clk,
        ap_rst_n,
        stream_in_TDATA,
        stream_in_TVALID,
        stream_in_TREADY,
        stream_in_TKEEP,
        stream_in_TSTRB,
        stream_in_TLAST,
        stream_out_TDATA,
        stream_out_TVALID,
        stream_out_TREADY,
        stream_out_TKEEP,
        stream_out_TSTRB,
        stream_out_TLAST
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst_n;
input  [255:0] stream_in_TDATA;
input   stream_in_TVALID;
output   stream_in_TREADY;
input  [31:0] stream_in_TKEEP;
input  [31:0] stream_in_TSTRB;
input  [0:0] stream_in_TLAST;
output  [255:0] stream_out_TDATA;
output   stream_out_TVALID;
input   stream_out_TREADY;
output  [31:0] stream_out_TKEEP;
output  [31:0] stream_out_TSTRB;
output  [0:0] stream_out_TLAST;

 reg    ap_rst_n_inv;
reg    stream_in_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_pp0_stage0;
reg    stream_out_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter1;
reg    ap_block_state1_pp0_stage0_iter0;
wire    regslice_both_stream_out_V_data_V_U_apdone_blk;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
reg    ap_block_pp0_stage0_subdone;
reg    ap_block_pp0_stage0_01001;
wire   [15:0] tmp_fu_137_p4;
wire   [15:0] sub_ln17_fu_147_p2;
wire   [15:0] tmp_s_fu_165_p4;
wire   [255:0] stream_data_data_1_fu_153_p5;
wire   [15:0] sub_ln17_1_fu_175_p2;
wire   [15:0] tmp_1_fu_193_p4;
wire   [255:0] stream_data_data_2_fu_181_p5;
wire   [15:0] sub_ln17_2_fu_203_p2;
wire   [15:0] tmp_2_fu_221_p4;
wire   [255:0] stream_data_data_3_fu_209_p5;
wire   [15:0] sub_ln17_3_fu_231_p2;
wire   [15:0] tmp_3_fu_249_p4;
wire   [255:0] stream_data_data_4_fu_237_p5;
wire   [15:0] sub_ln17_4_fu_259_p2;
wire   [15:0] tmp_4_fu_277_p4;
wire   [255:0] stream_data_data_5_fu_265_p5;
wire   [15:0] sub_ln17_5_fu_287_p2;
wire   [15:0] tmp_5_fu_305_p4;
wire   [255:0] stream_data_data_6_fu_293_p5;
wire   [15:0] sub_ln17_6_fu_315_p2;
wire   [15:0] tmp_6_fu_333_p4;
wire   [255:0] stream_data_data_7_fu_321_p5;
wire   [15:0] sub_ln17_7_fu_343_p2;
reg   [0:0] ap_NS_fsm;
wire    ap_reset_idle_pp0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    regslice_both_stream_in_V_data_V_U_apdone_blk;
wire   [255:0] stream_in_TDATA_int_regslice;
wire    stream_in_TVALID_int_regslice;
reg    stream_in_TREADY_int_regslice;
wire    regslice_both_stream_in_V_data_V_U_ack_in;
wire    regslice_both_stream_in_V_keep_V_U_apdone_blk;
wire   [31:0] stream_in_TKEEP_int_regslice;
wire    regslice_both_stream_in_V_keep_V_U_vld_out;
wire    regslice_both_stream_in_V_keep_V_U_ack_in;
wire    regslice_both_stream_in_V_strb_V_U_apdone_blk;
wire   [31:0] stream_in_TSTRB_int_regslice;
wire    regslice_both_stream_in_V_strb_V_U_vld_out;
wire    regslice_both_stream_in_V_strb_V_U_ack_in;
wire    regslice_both_stream_in_V_last_V_U_apdone_blk;
wire   [0:0] stream_in_TLAST_int_regslice;
wire    regslice_both_stream_in_V_last_V_U_vld_out;
wire    regslice_both_stream_in_V_last_V_U_ack_in;
wire   [255:0] stream_out_TDATA_int_regslice;
reg    stream_out_TVALID_int_regslice;
wire    stream_out_TREADY_int_regslice;
wire    regslice_both_stream_out_V_data_V_U_vld_out;
wire    regslice_both_stream_out_V_keep_V_U_apdone_blk;
wire    regslice_both_stream_out_V_keep_V_U_ack_in_dummy;
wire    regslice_both_stream_out_V_keep_V_U_vld_out;
wire    regslice_both_stream_out_V_strb_V_U_apdone_blk;
wire    regslice_both_stream_out_V_strb_V_U_ack_in_dummy;
wire    regslice_both_stream_out_V_strb_V_U_vld_out;
wire    regslice_both_stream_out_V_last_V_U_apdone_blk;
wire    regslice_both_stream_out_V_last_V_U_ack_in_dummy;
wire    regslice_both_stream_out_V_last_V_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

stream_sign_flip_regslice_both #(
    .DataWidth( 256 ))
regslice_both_stream_in_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(stream_in_TDATA),
    .vld_in(stream_in_TVALID),
    .ack_in(regslice_both_stream_in_V_data_V_U_ack_in),
    .data_out(stream_in_TDATA_int_regslice),
    .vld_out(stream_in_TVALID_int_regslice),
    .ack_out(stream_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_stream_in_V_data_V_U_apdone_blk)
);

stream_sign_flip_regslice_both #(
    .DataWidth( 32 ))
regslice_both_stream_in_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(stream_in_TKEEP),
    .vld_in(stream_in_TVALID),
    .ack_in(regslice_both_stream_in_V_keep_V_U_ack_in),
    .data_out(stream_in_TKEEP_int_regslice),
    .vld_out(regslice_both_stream_in_V_keep_V_U_vld_out),
    .ack_out(stream_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_stream_in_V_keep_V_U_apdone_blk)
);

stream_sign_flip_regslice_both #(
    .DataWidth( 32 ))
regslice_both_stream_in_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(stream_in_TSTRB),
    .vld_in(stream_in_TVALID),
    .ack_in(regslice_both_stream_in_V_strb_V_U_ack_in),
    .data_out(stream_in_TSTRB_int_regslice),
    .vld_out(regslice_both_stream_in_V_strb_V_U_vld_out),
    .ack_out(stream_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_stream_in_V_strb_V_U_apdone_blk)
);

stream_sign_flip_regslice_both #(
    .DataWidth( 1 ))
regslice_both_stream_in_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(stream_in_TLAST),
    .vld_in(stream_in_TVALID),
    .ack_in(regslice_both_stream_in_V_last_V_U_ack_in),
    .data_out(stream_in_TLAST_int_regslice),
    .vld_out(regslice_both_stream_in_V_last_V_U_vld_out),
    .ack_out(stream_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_stream_in_V_last_V_U_apdone_blk)
);

stream_sign_flip_regslice_both #(
    .DataWidth( 256 ))
regslice_both_stream_out_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(stream_out_TDATA_int_regslice),
    .vld_in(stream_out_TVALID_int_regslice),
    .ack_in(stream_out_TREADY_int_regslice),
    .data_out(stream_out_TDATA),
    .vld_out(regslice_both_stream_out_V_data_V_U_vld_out),
    .ack_out(stream_out_TREADY),
    .apdone_blk(regslice_both_stream_out_V_data_V_U_apdone_blk)
);

stream_sign_flip_regslice_both #(
    .DataWidth( 32 ))
regslice_both_stream_out_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(stream_in_TKEEP_int_regslice),
    .vld_in(stream_out_TVALID_int_regslice),
    .ack_in(regslice_both_stream_out_V_keep_V_U_ack_in_dummy),
    .data_out(stream_out_TKEEP),
    .vld_out(regslice_both_stream_out_V_keep_V_U_vld_out),
    .ack_out(stream_out_TREADY),
    .apdone_blk(regslice_both_stream_out_V_keep_V_U_apdone_blk)
);

stream_sign_flip_regslice_both #(
    .DataWidth( 32 ))
regslice_both_stream_out_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(stream_in_TSTRB_int_regslice),
    .vld_in(stream_out_TVALID_int_regslice),
    .ack_in(regslice_both_stream_out_V_strb_V_U_ack_in_dummy),
    .data_out(stream_out_TSTRB),
    .vld_out(regslice_both_stream_out_V_strb_V_U_vld_out),
    .ack_out(stream_out_TREADY),
    .apdone_blk(regslice_both_stream_out_V_strb_V_U_apdone_blk)
);

stream_sign_flip_regslice_both #(
    .DataWidth( 1 ))
regslice_both_stream_out_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(stream_in_TLAST_int_regslice),
    .vld_in(stream_out_TVALID_int_regslice),
    .ack_in(regslice_both_stream_out_V_last_V_U_ack_in_dummy),
    .data_out(stream_out_TLAST),
    .vld_out(regslice_both_stream_out_V_last_V_U_vld_out),
    .ack_out(stream_out_TREADY),
    .apdone_blk(regslice_both_stream_out_V_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

assign ap_reset_idle_pp0 = 1'b0;

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stream_in_TDATA_blk_n = stream_in_TVALID_int_regslice;
    end else begin
        stream_in_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stream_in_TREADY_int_regslice = 1'b1;
    end else begin
        stream_in_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        stream_out_TDATA_blk_n = stream_out_TREADY_int_regslice;
    end else begin
        stream_out_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stream_out_TVALID_int_regslice = 1'b1;
    end else begin
        stream_out_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & ((regslice_both_stream_out_V_data_V_U_apdone_blk == 1'b1) | (stream_out_TREADY_int_regslice == 1'b0))) | ((1'b1 == 1'b1) & ((stream_out_TREADY_int_regslice == 1'b0) | (stream_in_TVALID_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & ((regslice_both_stream_out_V_data_V_U_apdone_blk == 1'b1) | (stream_out_TREADY_int_regslice == 1'b0))) | ((1'b1 == 1'b1) & ((stream_out_TREADY_int_regslice == 1'b0) | (stream_in_TVALID_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & ((regslice_both_stream_out_V_data_V_U_apdone_blk == 1'b1) | (stream_out_TREADY_int_regslice == 1'b0))) | ((1'b1 == 1'b1) & ((stream_out_TREADY_int_regslice == 1'b0) | (stream_in_TVALID_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((stream_out_TREADY_int_regslice == 1'b0) | (stream_in_TVALID_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((regslice_both_stream_out_V_data_V_U_apdone_blk == 1'b1) | (stream_out_TREADY_int_regslice == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign stream_data_data_1_fu_153_p5 = {{stream_in_TDATA_int_regslice[255:32]}, {sub_ln17_fu_147_p2}, {stream_in_TDATA_int_regslice[15:0]}};

assign stream_data_data_2_fu_181_p5 = {{stream_data_data_1_fu_153_p5[255:64]}, {sub_ln17_1_fu_175_p2}, {stream_data_data_1_fu_153_p5[47:0]}};

assign stream_data_data_3_fu_209_p5 = {{stream_data_data_2_fu_181_p5[255:96]}, {sub_ln17_2_fu_203_p2}, {stream_data_data_2_fu_181_p5[79:0]}};

assign stream_data_data_4_fu_237_p5 = {{stream_data_data_3_fu_209_p5[255:128]}, {sub_ln17_3_fu_231_p2}, {stream_data_data_3_fu_209_p5[111:0]}};

assign stream_data_data_5_fu_265_p5 = {{stream_data_data_4_fu_237_p5[255:160]}, {sub_ln17_4_fu_259_p2}, {stream_data_data_4_fu_237_p5[143:0]}};

assign stream_data_data_6_fu_293_p5 = {{stream_data_data_5_fu_265_p5[255:192]}, {sub_ln17_5_fu_287_p2}, {stream_data_data_5_fu_265_p5[175:0]}};

assign stream_data_data_7_fu_321_p5 = {{stream_data_data_6_fu_293_p5[255:224]}, {sub_ln17_6_fu_315_p2}, {stream_data_data_6_fu_293_p5[207:0]}};

assign stream_in_TREADY = regslice_both_stream_in_V_data_V_U_ack_in;

assign stream_out_TDATA_int_regslice = {{sub_ln17_7_fu_343_p2}, {stream_data_data_7_fu_321_p5[239:0]}};

assign stream_out_TVALID = regslice_both_stream_out_V_data_V_U_vld_out;

assign sub_ln17_1_fu_175_p2 = (16'd0 - tmp_s_fu_165_p4);

assign sub_ln17_2_fu_203_p2 = (16'd0 - tmp_1_fu_193_p4);

assign sub_ln17_3_fu_231_p2 = (16'd0 - tmp_2_fu_221_p4);

assign sub_ln17_4_fu_259_p2 = (16'd0 - tmp_3_fu_249_p4);

assign sub_ln17_5_fu_287_p2 = (16'd0 - tmp_4_fu_277_p4);

assign sub_ln17_6_fu_315_p2 = (16'd0 - tmp_5_fu_305_p4);

assign sub_ln17_7_fu_343_p2 = (16'd0 - tmp_6_fu_333_p4);

assign sub_ln17_fu_147_p2 = (16'd0 - tmp_fu_137_p4);

assign tmp_1_fu_193_p4 = {{stream_in_TDATA_int_regslice[95:80]}};

assign tmp_2_fu_221_p4 = {{stream_in_TDATA_int_regslice[127:112]}};

assign tmp_3_fu_249_p4 = {{stream_in_TDATA_int_regslice[159:144]}};

assign tmp_4_fu_277_p4 = {{stream_in_TDATA_int_regslice[191:176]}};

assign tmp_5_fu_305_p4 = {{stream_in_TDATA_int_regslice[223:208]}};

assign tmp_6_fu_333_p4 = {{stream_in_TDATA_int_regslice[255:240]}};

assign tmp_fu_137_p4 = {{stream_in_TDATA_int_regslice[31:16]}};

assign tmp_s_fu_165_p4 = {{stream_in_TDATA_int_regslice[63:48]}};


reg find_kernel_block = 0;
// synthesis translate_off
`include "stream_sign_flip_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on

endmodule //stream_sign_flip

